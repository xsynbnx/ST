


PYTHON_SCRIPT=$(cat << 'END'
import os
import shutil
from pathlib import Path

def group_files(source_dir, destination_root, files_per_group=1000, copy=False):

    source_path = Path(source_dir)
    destination_path = Path(destination_root)

    if not source_path.is_dir():
        print(f"源目录不存在: {source_dir}")
        return

    if not destination_path.exists():
        destination_path.mkdir(parents=True)

    group_count = 1
    current_group_path = destination_path / f"group_{group_count}"
    current_group_path.mkdir()

    file_counter = 0

    
    with os.scandir(source_path) as it:
        for entry in it:
            if entry.is_file():
                source_file = source_path / entry.name
                destination_file = current_group_path / entry.name

                
                if destination_file.exists():
                    name, ext = os.path.splitext(entry.name)
                    new_name = f"{name}_copy{file_counter}{ext}"
                    destination_file = current_group_path / new_name

                if copy:
                    shutil.copy2(source_file, destination_file)
                else:
                    shutil.move(source_file, destination_file)

                file_counter += 1

                if file_counter >= files_per_group:
                    group_count += 1
                    current_group_path = destination_path / f"group_{group_count}"
                    current_group_path.mkdir()
                    file_counter = 0



if __name__ == "__main__":
    source_directory = "/storage/emulated/0/ST制作区/解包uexp"       
    destination_directory = "/storage/emulated/0/ST制作区/解包uexp"  
    group_files(source_directory, destination_directory, files_per_group=1000, copy=False)
END
)


TEMP_PYTHON_SCRIPT=$(mktemp)
echo "$PYTHON_SCRIPT" > "$TEMP_PYTHON_SCRIPT"


python "$TEMP_PYTHON_SCRIPT"


rm "$TEMP_PYTHON_SCRIPT"